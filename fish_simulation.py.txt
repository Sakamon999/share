import pygame
import random
import math

# 定数
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
FISH_COUNT = 100
FISH_SIZE = 20
SPEED = 2
MIN_DISTANCE = 15  # 他の魚との最小距離

# 魚クラス
class Fish:
    def __init__(self):
        self.x = random.uniform(FISH_SIZE, SCREEN_WIDTH - FISH_SIZE)
        self.y = random.uniform(FISH_SIZE, SCREEN_HEIGHT - FISH_SIZE)
        angle = random.uniform(0, 2 * math.pi)
        self.dx = math.cos(angle) * SPEED
        self.dy = math.sin(angle) * SPEED

    def move(self, fish_list):
        if self.x <= FISH_SIZE or self.x >= SCREEN_WIDTH - FISH_SIZE:
            self.dx *= -1
        if self.y <= FISH_SIZE or self.y >= SCREEN_HEIGHT - FISH_SIZE:
            self.dy *= -1

        for other in fish_list:
            if other != self:
                dist = math.hypot(self.x - other.x, self.y - other.y)
                if dist < MIN_DISTANCE:
                    angle = math.atan2(self.y - other.y, self.x - other.x)
                    self.dx += math.cos(angle) * 0.5
                    self.dy += math.sin(angle) * 0.5

        speed = math.sqrt(self.dx**2 + self.dy**2)
        if speed > SPEED:
            self.dx = (self.dx / speed) * SPEED
            self.dy = (self.dy / speed) * SPEED

        self.x += self.dx
        self.y += self.dy

    def draw(self, screen):
        points = [
            (self.x + FISH_SIZE * math.cos(math.atan2(self.dy, self.dx)),
             self.y + FISH_SIZE * math.sin(math.atan2(self.dy, self.dx))),  # 頭
            (self.x - FISH_SIZE * 0.5 * math.cos(math.atan2(self.dy, self.dx) + math.pi / 2),
             self.y - FISH_SIZE * 0.5 * math.sin(math.atan2(self.dy, self.dx) + math.pi / 2)),  # 下側
            (self.x - FISH_SIZE * math.cos(math.atan2(self.dy, self.dx)),
             self.y - FISH_SIZE * math.sin(math.atan2(self.dy, self.dx))),  # 尾
            (self.x - FISH_SIZE * 0.5 * math.cos(math.atan2(self.dy, self.dx) - math.pi / 2),
             self.y - FISH_SIZE * 0.5 * math.sin(math.atan2(self.dy, self.dx) - math.pi / 2))   # 上側
        ]
        pygame.draw.polygon(screen, (0, 150, 255), points)


def main():
    pygame.init()
    screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
    clock = pygame.time.Clock()

    fishes = [Fish() for _ in range(FISH_COUNT)]

    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        screen.fill((0, 0, 30))

        for fish in fishes:
            fish.move(fishes)
            fish.draw(screen)

        pygame.display.flip()
        clock.tick(60)

    pygame.quit()


if __name__ == "__main__":
    main()